import mongoose from "mongoose";

const MessageSchema = new mongoose.Schema({
  // Linkage
  conversation: {
    type: mongoose.Schema.Types.ObjectId,
    ref: "Conversation",
    required: true,
  },
  sender: {
    type: mongoose.Schema.Types.ObjectId,
    ref: "User",
    required: true,
  },

  // Message Content
  content: { type: String, default: null },

  // File/Media Sharing
  mediaURL: { type: String, default: null }, // URL to the hosted file (e.g., S3 or Cloudinary)
  mediaType: {
    type: String,
    enum: ["image", "video", "document", "audio", null],
    default: null,
  },

  // Message Status & Features
  sentAt: { type: Date, default: Date.now },

  // Read Receipts
  readBy: [
    {
      // Array of users who have read the message
      type: mongoose.Schema.Types.ObjectId,
      ref: "User",
    },
  ],

  // Editing & Deletion
  isEdited: { type: Boolean, default: false },
  editedAt: { type: Date, default: null },
  isDeleted: { type: Boolean, default: false }, // Soft delete

  // Link Previews (Embedded Document)
  linkPreview: {
    url: { type: String },
    title: { type: String },
    description: { type: String },
    imageURL: { type: String },
    default: null,
  },

  // Custom Message Reactions (Embedded Array)
  reactions: [
    {
      user: {
        type: mongoose.Schema.Types.ObjectId,
        ref: "User",
        required: true,
      },
      emoji: {
        type: String,
        required: true,
      }, // e.g., 'üëç', '‚ù§Ô∏è', 'üòÇ'
    },
  ],

  // AI Integration Feature
  isAIResponse: { type: Boolean, default: false }, // Was this message generated by an AI assistant?
});

const Message =
  mongoose.models.Message || mongoose.model("Message", MessageSchema);
export default Message;
